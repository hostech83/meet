{"version":3,"file":"static/js/190.70429d3a.chunk.js","mappings":"uLAKA,MAmIA,EAnImBA,IAAqD,IAApD,aAAEC,EAAY,eAAEC,EAAc,aAAEC,GAAcH,EAChE,MAAOI,EAAiBC,IAAsBC,EAAAA,EAAAA,WAAS,IAChDC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,KAC5BG,EAAUC,IAAeJ,EAAAA,EAAAA,UAAS,IAEnCK,GAAcC,EAAAA,EAAAA,UAAQ,IACnBX,EACHA,EAAaY,QAAQC,GACZA,EAASC,cAAcC,QAAQT,EAAMQ,gBAAkB,IAEhE,IACH,CAACd,EAAcM,KAElBU,EAAAA,EAAAA,YAAU,KACmB,IAAvBN,EAAYO,QAA0B,KAAVX,EAC9BG,EACE,yEAGFA,EAAY,IAEc,oBAAjBP,GACTA,EAAaM,EACf,GACC,CAACE,EAAaJ,EAAOJ,EAAcM,IAEtC,MAaMU,EAAyBA,KAC7BX,EAAS,IACTH,GAAmB,GACnBH,EAAe,OACfQ,EAAY,GAAG,EAQjB,OACEU,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CACHC,GAAG,cACH,cAAY,cACZC,KAAK,SACL,aAAW,cACXC,UAAU,qEACVC,MAAO,CAAEC,SAAU,SAAUC,UAE7BC,EAAAA,EAAAA,MAACC,EAAAA,EAAU,CAACL,UAAU,QAAOG,SAAA,EAC3BC,EAAAA,EAAAA,MAACP,EAAAA,EAAKS,MAAK,CACTC,QAAQ,OACRC,KAAK,KACLR,UAAU,mCAAkCG,SAAA,CAC7C,eACc,QAEfC,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,0BAAyBG,SAAA,EACtCP,EAAAA,EAAAA,KAACC,EAAAA,EAAKY,QAAO,CACXX,GAAG,OACHY,KAAK,OACLF,KAAK,KACLR,UAAU,iBACV,aAAW,cACXW,MAAO5B,EACP6B,SAlDkBC,IAC1B,MAAMF,EAAQE,EAAMC,OAAOH,MAC3B3B,EAAS2B,GACT9B,GAAmB,EAAK,EAgDhBkC,YAAY,oBACZC,QAASA,IAAMnC,GAAmB,GAClCoC,OAjCUJ,IAElBK,YAAW,IAAMrC,GAAmB,IAAQ,IAAI,EAgCxC,cAAY,sBAEbE,IACCa,EAAAA,EAAAA,KAACuB,EAAAA,EAAW,CACVnB,UAAU,qEACVoB,QAASzB,EACT,aAAW,kBACX,cAAY,uBAIjBf,IACCwB,EAAAA,EAAAA,MAACiB,EAAAA,EAAS,CACRC,GAAG,KACHtB,UAAU,oBACV,cAAY,mBACZ,aAAW,mBAAkBG,SAAA,CAE5BhB,EAAYoC,KAAI,CAACC,EAAYC,KAC5B7B,EAAAA,EAAAA,KAACyB,EAAAA,EAAUK,KAAI,CACbJ,GAAG,KACHtB,UAAU,iBACVoB,QAASA,IAtEII,KACzBxC,EAASwC,GACT3C,GAAmB,GACnBH,EAAe8C,GACftC,EAAY,GAAG,EAkEYyC,CAAkBH,GAEjC,aAAW,WACX,cAAa,cAAcC,IAC3BG,QAAM,EACNC,QAAQ,OAAM1B,SAEbqB,GANIA,MAST5B,EAAAA,EAAAA,KAACyB,EAAAA,EAAUK,KAAI,CACbJ,GAAG,KACHtB,UAAU,iBACVoB,QAASzB,EACT,aAAW,WACX,cAAY,iBAEZiC,QAAM,EACNC,QAAQ,OAAM1B,UAEdP,EAAAA,EAAAA,KAAA,KAAAO,SAAG,oBAJE,yBASR,C,mECpIX,MAAM2B,EAAY,CAAC,KAAM,YAOlB,SAASC,EAAcC,GAU3B,IAV4B,QAC7BC,EAAO,SACPC,EAAQ,KACRC,EAAI,OACJrB,EAAM,IACNsB,EAAG,KACHrC,EAAI,QACJqB,EAAO,SACPiB,EAAW,EAAC,KACZ3B,GACDsB,EACMC,IAEDA,EADU,MAARE,GAA0B,MAAVrB,GAAyB,MAAPsB,EAC1B,IAEA,UAGd,MAAME,EAAO,CACXL,WAEF,GAAgB,WAAZA,EACF,MAAO,CAAC,CACNvB,KAAMA,GAAQ,SACdwB,YACCI,GAEL,MAAMC,EAAc1B,KACdqB,GAAwB,MAAZD,GA/Bb,SAAuBE,GAC5B,OAAQA,GAAwB,MAAhBA,EAAKK,MACvB,CA6BuCC,CAAcN,KAC/CtB,EAAM6B,iBAEJR,EACFrB,EAAM8B,kBAGG,MAAXvB,GAA2BA,EAAQP,EAAM,EAe3C,MAPgB,MAAZoB,IAEFE,IAASA,EAAO,KACZD,IACFC,OAAOS,IAGJ,CAAC,CACN7C,KAAc,MAARA,EAAeA,EAAO,SAG5BmC,cAAUU,EACVP,SAAUH,OAAWU,EAAYP,EACjCF,OACArB,OAAoB,MAAZmB,EAAkBnB,OAAS8B,EACnC,gBAAkBV,QAAWU,EAC7BR,IAAiB,MAAZH,EAAkBG,OAAMQ,EAC7BxB,QAASmB,EACTM,UAxBoBhC,IACF,MAAdA,EAAMiC,MACRjC,EAAM6B,iBACNH,EAAY1B,GACd,GAqBCyB,EACL,CACA,MAAMS,EAAsBC,EAAAA,YAAiB,CAACxE,EAAMyE,KAClD,IACI3B,GAAI4B,EAAM,SACVhB,GACE1D,EACJ2E,EA3EJ,SAAuCC,EAAGC,GAAK,GAAI,MAAQD,EAAG,MAAO,CAAC,EAAG,IAAIE,EAAI,CAAC,EAAG,IAAK,IAAIC,KAAKH,EAAG,GAAI,CAAC,EAAEI,eAAeC,KAAKL,EAAGG,GAAI,CAAE,GAAIF,EAAE7D,QAAQ+D,IAAM,EAAG,SAAUD,EAAEC,GAAKH,EAAEG,EAAI,CAAE,OAAOD,CAAG,CA2ExLI,CAA8BlF,EAAMsD,GAC9C,MAAO6B,GACL1B,QAAS2B,IACN7B,EAAe8B,OAAOC,OAAO,CAChC7B,QAASiB,EACThB,YACCiB,IACH,OAAoBvD,EAAAA,EAAAA,KAAKgE,EAAWC,OAAOC,OAAO,CAAC,EAAGX,EAAOQ,EAAa,CACxEV,IAAKA,IACJ,IAELF,EAAOgB,YAAc,SACrB,S,+GCvFA,MAAMC,EAA0BhB,EAAAA,cAAoB,MACpDgB,EAAWD,YAAc,aACzB,U,cCFA,MACA,EADgCf,EAAAA,cAAoB,M,2CCDpD,MAAMlB,EAAY,CAAC,KAAM,SAAU,YAW5B,SAASmC,EAAUjC,GAOvB,IAPwB,IACzBc,EAAG,QACH1B,EAAO,OACP8C,EAAM,GACNpE,EAAE,KACFC,EAAI,SACJmC,GACDF,EACC,MAAMmC,GAAiBC,EAAAA,EAAAA,YAAWC,EAAAA,GAC5BC,GAAaF,EAAAA,EAAAA,YAAWJ,GACxBO,GAAaH,EAAAA,EAAAA,YAAWI,GAC9B,IAAIC,EAAWP,EACf,MAAMf,EAAQ,CACZpD,QAEF,GAAIuE,EAAY,CACTvE,GAA4B,YAApBuE,EAAWvE,OAAoBoD,EAAMpD,KAAO,OACzD,MAAM2E,EAAsBJ,EAAWK,gBAAuB,MAAP7B,EAAcA,EAAM,MACrE8B,EAAsBN,EAAWO,gBAAuB,MAAP/B,EAAcA,EAAM,MAG3EK,GAAM2B,EAAAA,EAAAA,IAAS,cAAgBhC,EAC/BK,EAAMrD,GAAK4E,GAAuB5E,EAClC2E,EAAqB,MAAVP,GAAyB,MAAPpB,EAAcwB,EAAWS,YAAcjC,EAAMoB,GAWtEO,IAA4B,MAAdF,GAAsBA,EAAWS,eAAkC,MAAdT,GAAsBA,EAAWU,gBAAe9B,EAAM,iBAAmByB,EAClJ,CAqBA,MApBmB,QAAfzB,EAAMpD,OACRoD,EAAM,iBAAmBsB,EACpBA,IACHtB,EAAMd,UAAY,GAEhBH,IACFiB,EAAMd,UAAY,EAClBc,EAAM,kBAAmB,IAG7BA,EAAM/B,SAAU8D,EAAAA,EAAAA,IAAiB7B,IAC3BnB,IACO,MAAXd,GAA2BA,EAAQiC,GACxB,MAAPP,GAGAqB,IAAmBd,EAAE8B,wBACvBhB,EAAerB,EAAKO,GACtB,IAEK,CAACF,EAAO,CACbsB,YAEJ,CACA,MAAMW,EAAuBpC,EAAAA,YAAiB,CAACxE,EAAMyE,KACnD,IACI3B,GAAIsC,EAAYb,EAAAA,GAAM,OACtBmB,EAAM,SACNmB,GACE7G,EACJ8G,EA5EJ,SAAuClC,EAAGC,GAAK,GAAI,MAAQD,EAAG,MAAO,CAAC,EAAG,IAAIE,EAAI,CAAC,EAAG,IAAK,IAAIC,KAAKH,EAAG,GAAI,CAAC,EAAEI,eAAeC,KAAKL,EAAGG,GAAI,CAAE,GAAIF,EAAE7D,QAAQ+D,IAAM,EAAG,SAAUD,EAAEC,GAAKH,EAAEG,EAAI,CAAE,OAAOD,CAAG,CA4EtLI,CAA8BlF,EAAMsD,GAChD,MAAOqB,EAAOb,GAAQ2B,EAAWJ,OAAOC,OAAO,CAC7ChB,KAAKyC,EAAAA,EAAAA,GAAaF,EAAUC,EAAQnD,MACpC+B,UACCoB,IAIH,OADAnC,GAAM2B,EAAAA,EAAAA,IAAS,WAAaxC,EAAKmC,UACb7E,EAAAA,EAAAA,KAAKgE,EAAWC,OAAOC,OAAO,CAAC,EAAGwB,EAASnC,EAAO,CACpEF,IAAKA,IACJ,IAELmC,EAAQrB,YAAc,UACtB,UC1FMjC,EAAY,CAAC,KAAM,WAAY,YAAa,OAAQ,aAc1D,MAAM0D,EAAOA,OACPC,GAAiBX,EAAAA,EAAAA,IAAS,aAC1BY,EAAmB1C,EAAAA,YAAiB,CAACxE,EAAMyE,KAC/C,IAEI3B,GAAIsC,EAAY,MAAK,SACrB+B,EAAQ,UACRZ,EAAS,KACThF,EAAI,UACJ8C,GACErE,EACJ2E,EAxBJ,SAAuCC,EAAGC,GAAK,GAAI,MAAQD,EAAG,MAAO,CAAC,EAAG,IAAIE,EAAI,CAAC,EAAG,IAAK,IAAIC,KAAKH,EAAG,GAAI,CAAC,EAAEI,eAAeC,KAAKL,EAAGG,GAAI,CAAE,GAAIF,EAAE7D,QAAQ+D,IAAM,EAAG,SAAUD,EAAEC,GAAKH,EAAEG,EAAI,CAAE,OAAOD,CAAG,CAwBxLI,CAA8BlF,EAAMsD,GAG9C,MAAM8D,ECVO,WAGb,MAAO,CAAEC,IAAYC,EAAAA,EAAAA,aAAWC,GAAYA,EAAW,GAAG,GAC1D,OAAOF,CACT,CDKsBG,GACdC,GAAkBC,EAAAA,EAAAA,SAAO,GACzB/B,GAAiBC,EAAAA,EAAAA,YAAWC,EAAAA,GAC5BE,GAAaH,EAAAA,EAAAA,YAAWI,GAC9B,IAAIK,EAAiBF,EACjBJ,IACFxE,EAAOA,GAAQ,UACfgF,EAAYR,EAAWQ,UAEvBF,EAAkBN,EAAWM,gBAC7BF,EAAkBJ,EAAWI,iBAE/B,MAAMwB,GAAWD,EAAAA,EAAAA,QAAO,MAClBE,EAAmBC,IACvB,MAAMC,EAAkBH,EAASI,QACjC,IAAKD,EAAiB,OAAO,KAC7B,MAAME,GAAQC,EAAAA,EAAAA,GAAIH,EAAiB,IAAIb,gCACjCiB,EAAcJ,EAAgBK,cAAc,wBAClD,IAAKD,GAAeA,IAAgBE,SAASC,cAAe,OAAO,KACnE,MAAMpF,EAAQ+E,EAAMhH,QAAQkH,GAC5B,IAAe,IAAXjF,EAAc,OAAO,KACzB,IAAIqF,EAAYrF,EAAQ4E,EAGxB,OAFIS,GAAaN,EAAM9G,SAAQoH,EAAY,GACvCA,EAAY,IAAGA,EAAYN,EAAM9G,OAAS,GACvC8G,EAAMM,EAAU,EAEnBC,EAAeA,CAACjE,EAAKjC,KACd,MAAPiC,IACQ,MAAZ6C,GAA4BA,EAAS7C,EAAKjC,GACxB,MAAlBsD,GAAkCA,EAAerB,EAAKjC,GAAM,GA0B9DpB,EAAAA,EAAAA,YAAU,KACR,GAAI0G,EAASI,SAAWN,EAAgBM,QAAS,CAC/C,MAAMG,EAAcP,EAASI,QAAQI,cAAc,IAAIlB,0BACxC,MAAfiB,GAA+BA,EAAYM,OAC7C,CACAf,EAAgBM,SAAU,CAAK,IAEjC,MAAMU,GAAYC,EAAAA,EAAAA,GAAcjE,EAAKkD,GACrC,OAAoBvG,EAAAA,EAAAA,KAAKyE,EAAAA,EAAkB8C,SAAU,CACnDxG,MAAOoG,EACP5G,UAAuBP,EAAAA,EAAAA,KAAKoE,EAAWmD,SAAU,CAC/CxG,MAAO,CACLZ,OAEAgF,WAAWQ,EAAAA,EAAAA,GAAaR,GACxBF,gBAAiBA,GAAmBW,EACpCb,gBAAiBA,GAAmBa,GAEtCrF,UAAuBP,EAAAA,EAAAA,KAAKgE,EAAWC,OAAOC,OAAO,CAAC,EAAGX,EAAO,CAC9DN,UA3CgBhC,IAEpB,GADa,MAAbgC,GAA6BA,EAAUhC,IAClC0D,EACH,OAEF,IAAI6C,EACJ,OAAQvG,EAAMiC,KACZ,IAAK,YACL,IAAK,UACHsE,EAAkBhB,GAAkB,GACpC,MACF,IAAK,aACL,IAAK,YACHgB,EAAkBhB,EAAiB,GACnC,MACF,QACE,OAECgB,IACLvG,EAAM6B,iBACNqE,EAAaK,EAAgBC,SAAQC,EAAAA,EAAAA,GAAS,cAAgB,KAAMzG,GACpEoF,EAAgBM,SAAU,EAC1BX,IAAa,EAsBT3C,IAAKgE,EACLlH,KAAMA,QAGV,IAEJ2F,EAAI3B,YAAc,MAClB,QAAeF,OAAOC,OAAO4B,EAAK,CAChChE,KAAM0D,I,wBErGR,MAAMmC,EAA6BvE,EAAAA,YAAiB,CAAAxE,EAUjDyE,KAAQ,IAV0C,SACnDuE,EAAQ,OACRtD,EAAM,SACNhC,EAAQ,SACRmD,EAAQ,UACRrF,EAAS,QACT6B,EAAO,OACPD,EAAM,GACNN,KACG6B,GACJ3E,EACCgJ,GAAWC,EAAAA,EAAAA,IAAmBD,EAAU,mBACxC,MAAOE,EAAcpF,GAAQ2B,EAAW,CACtCnB,KAAKyC,EAAAA,EAAAA,GAAaF,EAAUlC,EAAMhB,MAClC+B,YACGf,IAECZ,GAAc2C,EAAAA,EAAAA,IAAiBrE,IACnC,GAAIqB,EAGF,OAFArB,EAAM6B,sBACN7B,EAAM8B,kBAGR+E,EAAatG,QAAQP,EAAM,IAEzBqB,QAA+BU,IAAnBO,EAAMd,WACpBc,EAAMd,UAAY,EAClBc,EAAM,kBAAmB,GAI3B,MAAMS,EAAYtC,IAAOM,EAASuB,EAAMhB,KAAO,IAAM,SAAW,OAEhE,OAAoBvC,EAAAA,EAAAA,KAAKgE,EAAW,CAClCX,IAAKA,KACFE,KACAuE,EACHtG,QAASmB,EACTvC,UAAW2H,IAAW3H,EAAWwH,EAAUlF,EAAKmC,UAAY,SAAUvC,GAAY,WAAYL,GAAW,GAAG2F,KAAY3F,IAAWD,GAAU,GAAG4F,aAChJ,IAEJD,EAAcxD,YAAc,gBAC5B,UC1CM1C,EAAyB2B,EAAAA,YAAiB,CAACG,EAAOF,KACtD,MAAM,UACJjD,EACAwH,SAAUI,EAAe,QACzB/F,EAAO,WACPgG,EAAU,SACVC,EAAQ,GAERxG,EAAK,SACFyG,IACDC,EAAAA,EAAAA,IAAgB7E,EAAO,CACzB4B,UAAW,aAEPyC,GAAWC,EAAAA,EAAAA,IAAmBG,EAAiB,cACrD,IAAIK,EAKJ,OAJIJ,IACFI,GAAmC,IAAfJ,EAAsB,aAAe,cAAcA,MAGrDjI,EAAAA,EAAAA,KAAKsI,EAAS,CAChCjF,IAAKA,KACF8E,EACHzG,GAAIA,EACJtB,UAAW2H,IAAW3H,EAAWwH,EAAU3F,GAAW,GAAG2F,KAAY3F,IAAWoG,GAAqB,GAAGT,KAAYS,IAAqBH,GAAY,GAAGN,eACxJ,IAEJnG,EAAU0C,YAAc,YACxB,QAAeF,OAAOC,OAAOzC,EAAW,CACtCK,KAAM6F,G","sources":["components/CitySearch.js","../node_modules/@restart/ui/esm/Button.js","../node_modules/@restart/ui/esm/NavContext.js","../node_modules/@restart/ui/esm/TabContext.js","../node_modules/@restart/ui/esm/NavItem.js","../node_modules/@restart/ui/esm/Nav.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useForceUpdate.js","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js"],"sourcesContent":["// src/components/CitySearch.js\r\n\r\nimport React, { useState, useMemo, useEffect } from \"react\";\r\nimport { Form, InputGroup, ListGroup, CloseButton } from \"react-bootstrap\";\r\n\r\nconst CitySearch = ({ allLocations, setCurrentCity, setInfoAlert }) => {\r\n  const [showSuggestions, setShowSuggestions] = useState(false);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [infoText, setInfoText] = useState(\"\");\r\n\r\n  const suggestions = useMemo(() => {\r\n    return allLocations\r\n      ? allLocations.filter((location) => {\r\n          return location.toUpperCase().indexOf(query.toUpperCase()) > -1;\r\n        })\r\n      : [];\r\n  }, [allLocations, query]);\r\n\r\n  useEffect(() => {\r\n    if (suggestions.length === 0 && query !== \"\") {\r\n      setInfoText(\r\n        \"We can not find the city you are looking for. Please try another city\"\r\n      );\r\n    } else {\r\n      setInfoText(\"\");\r\n    }\r\n    if (typeof setInfoAlert === \"function\") {\r\n      setInfoAlert(infoText);\r\n    }\r\n  }, [suggestions, query, setInfoAlert, infoText]);\r\n\r\n  const handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n    setQuery(value);\r\n    setShowSuggestions(true);\r\n  };\r\n\r\n  const handleItemClicked = (suggestion) => {\r\n    setQuery(suggestion);\r\n    setShowSuggestions(false);\r\n    setCurrentCity(suggestion);\r\n    setInfoText(\"\");\r\n  };\r\n\r\n  const handleAllCitiesClicked = () => {\r\n    setQuery(\"\");\r\n    setShowSuggestions(false);\r\n    setCurrentCity(\"all\");\r\n    setInfoText(\"\");\r\n  };\r\n\r\n  const handleBlur = (event) => {\r\n    // Delay hiding suggestions to allow for click events on suggestions\r\n    setTimeout(() => setShowSuggestions(false), 200);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      id=\"city-search\"\r\n      data-testid=\"city-search\"\r\n      role=\"region\"\r\n      aria-label=\"City Search\"\r\n      className=\"d-flex flex-column align-items-center justify-content-center w-100\"\r\n      style={{ maxWidth: \"500px\" }}\r\n    >\r\n      <InputGroup className=\"w-100\">\r\n        <Form.Label\r\n          htmlFor=\"city\"\r\n          size=\"lg\"\r\n          className=\"w-100 text-center mb-2 labelCity\"\r\n        >\r\n          City Search:{\" \"}\r\n        </Form.Label>\r\n        <div className=\"position-relative w-100\">\r\n          <Form.Control\r\n            id=\"city\"\r\n            type=\"text\"\r\n            size=\"lg\"\r\n            className=\"city mb-2 pe-5\"\r\n            aria-label=\"City search\"\r\n            value={query}\r\n            onChange={handleInputChanged}\r\n            placeholder=\"Search for a city\"\r\n            onFocus={() => setShowSuggestions(true)}\r\n            onBlur={handleBlur}\r\n            data-testid=\"city-search-input\"\r\n          />\r\n          {query && (\r\n            <CloseButton\r\n              className=\"buttonClear position-absolute top-50 end-0 translate-middle-y pe-3\"\r\n              onClick={handleAllCitiesClicked}\r\n              aria-label=\"Clear selection\"\r\n              data-testid=\"clear-selection\"\r\n            />\r\n          )}\r\n        </div>\r\n        {showSuggestions && (\r\n          <ListGroup\r\n            as=\"ul\"\r\n            className=\"suggestions w-100\"\r\n            data-testid=\"suggestions-list\"\r\n            aria-label=\"suggestions-list\"\r\n          >\r\n            {suggestions.map((suggestion, index) => (\r\n              <ListGroup.Item\r\n                as=\"li\"\r\n                className=\"citiesListItem\"\r\n                onClick={() => handleItemClicked(suggestion)}\r\n                key={suggestion}\r\n                aria-label=\"listitem\"\r\n                data-testid={`suggestion-${index}`}\r\n                action\r\n                variant=\"dark\"\r\n              >\r\n                {suggestion}\r\n              </ListGroup.Item>\r\n            ))}\r\n            <ListGroup.Item\r\n              as=\"li\"\r\n              className=\"citiesListItem\"\r\n              onClick={handleAllCitiesClicked}\r\n              aria-label=\"listitem\"\r\n              data-testid=\"see-all-cities\"\r\n              key={\"See all cities\"}\r\n              action\r\n              variant=\"dark\"\r\n            >\r\n              <b>See all cities</b>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        )}\r\n      </InputGroup>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default CitySearch;\r\n","const _excluded = [\"as\", \"disabled\"];\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.indexOf(n) >= 0) continue; t[n] = r[n]; } return t; }\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  role,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n  const meta = {\n    tagName\n  };\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n    onClick == null ? void 0 : onClick(event);\n  };\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n  if (tagName === 'a') {\n    // Ensure there's a href so Enter can trigger anchor button.\n    href || (href = '#');\n    if (disabled) {\n      href = undefined;\n    }\n  }\n  return [{\n    role: role != null ? role : 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      as: asProp,\n      disabled\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;","import * as React from 'react';\nconst NavContext = /*#__PURE__*/React.createContext(null);\nNavContext.displayName = 'NavContext';\nexport default NavContext;","import * as React from 'react';\nconst TabContext = /*#__PURE__*/React.createContext(null);\nexport default TabContext;","const _excluded = [\"as\", \"active\", \"eventKey\"];\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.indexOf(n) >= 0) continue; t[n] = r[n]; } return t; }\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport NavContext from './NavContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Button from './Button';\nimport { dataAttr } from './DataKey';\nimport TabContext from './TabContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useNavItem({\n  key,\n  onClick,\n  active,\n  id,\n  role,\n  disabled\n}) {\n  const parentOnSelect = useContext(SelectableContext);\n  const navContext = useContext(NavContext);\n  const tabContext = useContext(TabContext);\n  let isActive = active;\n  const props = {\n    role\n  };\n  if (navContext) {\n    if (!role && navContext.role === 'tablist') props.role = 'tab';\n    const contextControllerId = navContext.getControllerId(key != null ? key : null);\n    const contextControlledId = navContext.getControlledId(key != null ? key : null);\n\n    // @ts-ignore\n    props[dataAttr('event-key')] = key;\n    props.id = contextControllerId || id;\n    isActive = active == null && key != null ? navContext.activeKey === key : active;\n\n    /**\n     * Simplified scenario for `mountOnEnter`.\n     *\n     * While it would make sense to keep 'aria-controls' for tabs that have been mounted at least\n     * once, it would also complicate the code quite a bit, for very little gain.\n     * The following implementation is probably good enough.\n     *\n     * @see https://github.com/react-restart/ui/pull/40#issuecomment-1009971561\n     */\n    if (isActive || !(tabContext != null && tabContext.unmountOnExit) && !(tabContext != null && tabContext.mountOnEnter)) props['aria-controls'] = contextControlledId;\n  }\n  if (props.role === 'tab') {\n    props['aria-selected'] = isActive;\n    if (!isActive) {\n      props.tabIndex = -1;\n    }\n    if (disabled) {\n      props.tabIndex = -1;\n      props['aria-disabled'] = true;\n    }\n  }\n  props.onClick = useEventCallback(e => {\n    if (disabled) return;\n    onClick == null ? void 0 : onClick(e);\n    if (key == null) {\n      return;\n    }\n    if (parentOnSelect && !e.isPropagationStopped()) {\n      parentOnSelect(key, e);\n    }\n  });\n  return [props, {\n    isActive\n  }];\n}\nconst NavItem = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      as: Component = Button,\n      active,\n      eventKey\n    } = _ref,\n    options = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [props, meta] = useNavItem(Object.assign({\n    key: makeEventKey(eventKey, options.href),\n    active\n  }, options));\n\n  // @ts-ignore\n  props[dataAttr('active')] = meta.isActive;\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, options, props, {\n    ref: ref\n  }));\n});\nNavItem.displayName = 'NavItem';\nexport default NavItem;","const _excluded = [\"as\", \"onSelect\", \"activeKey\", \"role\", \"onKeyDown\"];\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.indexOf(n) >= 0) continue; t[n] = r[n]; } return t; }\nimport qsa from 'dom-helpers/querySelectorAll';\nimport * as React from 'react';\nimport { useContext, useEffect, useRef } from 'react';\nimport useForceUpdate from '@restart/hooks/useForceUpdate';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport NavContext from './NavContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport TabContext from './TabContext';\nimport { dataAttr, dataProp } from './DataKey';\nimport NavItem from './NavItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = () => {};\nconst EVENT_KEY_ATTR = dataAttr('event-key');\nconst Nav = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n      as: Component = 'div',\n      onSelect,\n      activeKey,\n      role,\n      onKeyDown\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  // A ref and forceUpdate for refocus, b/c we only want to trigger when needed\n  // and don't want to reset the set in the effect\n  const forceUpdate = useForceUpdate();\n  const needsRefocusRef = useRef(false);\n  const parentOnSelect = useContext(SelectableContext);\n  const tabContext = useContext(TabContext);\n  let getControlledId, getControllerId;\n  if (tabContext) {\n    role = role || 'tablist';\n    activeKey = tabContext.activeKey;\n    // TODO: do we need to duplicate these?\n    getControlledId = tabContext.getControlledId;\n    getControllerId = tabContext.getControllerId;\n  }\n  const listNode = useRef(null);\n  const getNextActiveTab = offset => {\n    const currentListNode = listNode.current;\n    if (!currentListNode) return null;\n    const items = qsa(currentListNode, `[${EVENT_KEY_ATTR}]:not([aria-disabled=true])`);\n    const activeChild = currentListNode.querySelector('[aria-selected=true]');\n    if (!activeChild || activeChild !== document.activeElement) return null;\n    const index = items.indexOf(activeChild);\n    if (index === -1) return null;\n    let nextIndex = index + offset;\n    if (nextIndex >= items.length) nextIndex = 0;\n    if (nextIndex < 0) nextIndex = items.length - 1;\n    return items[nextIndex];\n  };\n  const handleSelect = (key, event) => {\n    if (key == null) return;\n    onSelect == null ? void 0 : onSelect(key, event);\n    parentOnSelect == null ? void 0 : parentOnSelect(key, event);\n  };\n  const handleKeyDown = event => {\n    onKeyDown == null ? void 0 : onKeyDown(event);\n    if (!tabContext) {\n      return;\n    }\n    let nextActiveChild;\n    switch (event.key) {\n      case 'ArrowLeft':\n      case 'ArrowUp':\n        nextActiveChild = getNextActiveTab(-1);\n        break;\n      case 'ArrowRight':\n      case 'ArrowDown':\n        nextActiveChild = getNextActiveTab(1);\n        break;\n      default:\n        return;\n    }\n    if (!nextActiveChild) return;\n    event.preventDefault();\n    handleSelect(nextActiveChild.dataset[dataProp('EventKey')] || null, event);\n    needsRefocusRef.current = true;\n    forceUpdate();\n  };\n  useEffect(() => {\n    if (listNode.current && needsRefocusRef.current) {\n      const activeChild = listNode.current.querySelector(`[${EVENT_KEY_ATTR}][aria-selected=true]`);\n      activeChild == null ? void 0 : activeChild.focus();\n    }\n    needsRefocusRef.current = false;\n  });\n  const mergedRef = useMergedRefs(ref, listNode);\n  return /*#__PURE__*/_jsx(SelectableContext.Provider, {\n    value: handleSelect,\n    children: /*#__PURE__*/_jsx(NavContext.Provider, {\n      value: {\n        role,\n        // used by NavLink to determine it's role\n        activeKey: makeEventKey(activeKey),\n        getControlledId: getControlledId || noop,\n        getControllerId: getControllerId || noop\n      },\n      children: /*#__PURE__*/_jsx(Component, Object.assign({}, props, {\n        onKeyDown: handleKeyDown,\n        ref: mergedRef,\n        role: role\n      }))\n    })\n  });\n});\nNav.displayName = 'Nav';\nexport default Object.assign(Nav, {\n  Item: NavItem\n});","import { useReducer } from 'react';\n\n/**\n * Returns a function that triggers a component update. the hook equivalent to\n * `this.forceUpdate()` in a class component. In most cases using a state value directly\n * is preferable but may be required in some advanced usages of refs for interop or\n * when direct DOM manipulation is required.\n *\n * ```ts\n * const forceUpdate = useForceUpdate();\n *\n * const updateOnClick = useCallback(() => {\n *  forceUpdate()\n * }, [forceUpdate])\n *\n * return <button type=\"button\" onClick={updateOnClick}>Hi there</button>\n * ```\n */\nexport default function useForceUpdate() {\n  // The toggling state value is designed to defeat React optimizations for skipping\n  // updates when they are strictly equal to the last state value\n  const [, dispatch] = useReducer(revision => revision + 1, 0);\n  return dispatch;\n}","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport warning from 'warning';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useNavItem } from '@restart/ui/NavItem';\nimport { makeEventKey } from '@restart/ui/SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroupItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  active,\n  disabled,\n  eventKey,\n  className,\n  variant,\n  action,\n  as,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  const [navItemProps, meta] = useNavItem({\n    key: makeEventKey(eventKey, props.href),\n    active,\n    ...props\n  });\n  const handleClick = useEventCallback(event => {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n    navItemProps.onClick(event);\n  });\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  }\n\n  // eslint-disable-next-line no-nested-ternary\n  const Component = as || (action ? props.href ? 'a' : 'button' : 'div');\n  process.env.NODE_ENV !== \"production\" ? warning(as || !(!action && props.href), '`action=false` and `href` should not be used together.') : void 0;\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    ...navItemProps,\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, meta.isActive && 'active', disabled && 'disabled', variant && `${bsPrefix}-${variant}`, action && `${bsPrefix}-action`)\n  });\n});\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport BaseNav from '@restart/ui/Nav';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport ListGroupItem from './ListGroupItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroup = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    className,\n    bsPrefix: initialBsPrefix,\n    variant,\n    horizontal,\n    numbered,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as = 'div',\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  let horizontalVariant;\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : `horizontal-${horizontal}`;\n  }\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/_jsx(BaseNav, {\n    ref: ref,\n    ...controlledProps,\n    as: as,\n    className: classNames(className, bsPrefix, variant && `${bsPrefix}-${variant}`, horizontalVariant && `${bsPrefix}-${horizontalVariant}`, numbered && `${bsPrefix}-numbered`)\n  });\n});\nListGroup.displayName = 'ListGroup';\nexport default Object.assign(ListGroup, {\n  Item: ListGroupItem\n});"],"names":["_ref","allLocations","setCurrentCity","setInfoAlert","showSuggestions","setShowSuggestions","useState","query","setQuery","infoText","setInfoText","suggestions","useMemo","filter","location","toUpperCase","indexOf","useEffect","length","handleAllCitiesClicked","_jsx","Form","id","role","className","style","maxWidth","children","_jsxs","InputGroup","Label","htmlFor","size","Control","type","value","onChange","event","target","placeholder","onFocus","onBlur","setTimeout","CloseButton","onClick","ListGroup","as","map","suggestion","index","Item","handleItemClicked","action","variant","_excluded","useButtonProps","_ref2","tagName","disabled","href","rel","tabIndex","meta","handleClick","trim","isTrivialHref","preventDefault","stopPropagation","undefined","onKeyDown","key","Button","React","ref","asProp","props","r","e","t","n","hasOwnProperty","call","_objectWithoutPropertiesLoose","buttonProps","Component","Object","assign","displayName","NavContext","useNavItem","active","parentOnSelect","useContext","SelectableContext","navContext","tabContext","TabContext","isActive","contextControllerId","getControllerId","contextControlledId","getControlledId","dataAttr","activeKey","unmountOnExit","mountOnEnter","useEventCallback","isPropagationStopped","NavItem","eventKey","options","makeEventKey","noop","EVENT_KEY_ATTR","Nav","onSelect","forceUpdate","dispatch","useReducer","revision","useForceUpdate","needsRefocusRef","useRef","listNode","getNextActiveTab","offset","currentListNode","current","items","qsa","activeChild","querySelector","document","activeElement","nextIndex","handleSelect","focus","mergedRef","useMergedRefs","Provider","nextActiveChild","dataset","dataProp","ListGroupItem","bsPrefix","useBootstrapPrefix","navItemProps","classNames","initialBsPrefix","horizontal","numbered","controlledProps","useUncontrolled","horizontalVariant","BaseNav"],"sourceRoot":""}