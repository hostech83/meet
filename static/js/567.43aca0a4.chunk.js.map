{"version":3,"file":"static/js/567.43aca0a4.chunk.js","mappings":"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","sources":["components/CityEventsChart.js"],"sourcesContent":["// src/components/CityEventsChart.js\r\n\r\nimport React, { useState, useEffect, useMemo } from \"react\";\r\nimport {\r\n  ScatterChart,\r\n  Scatter,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\n\r\nconst CityEventsChart = ({ events, allLocations }) => {\r\n  const [data, setData] = useState([]);\r\n  const [screenWidth, setScreenWidth] = useState(window.innerWidth);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => setScreenWidth(window.innerWidth);\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  const getData = useMemo(() => {\r\n    if (\r\n      !Array.isArray(allLocations) ||\r\n      !Array.isArray(events) ||\r\n      allLocations.length === 0 ||\r\n      events.length === 0\r\n    ) {\r\n      return [];\r\n    }\r\n    const chartData = allLocations.map((location) => {\r\n      const count = events.filter(\r\n        (event) => event.location === location\r\n      ).length;\r\n      const city = location.split(/, | - /)[0];\r\n      return { city, count };\r\n    });\r\n    return chartData;\r\n  }, [allLocations, events]);\r\n\r\n  useEffect(() => {\r\n    setData(getData);\r\n  }, [getData]);\r\n\r\n  const CustomXAxisTick = ({ x, y, payload }) => {\r\n    const isVerySmallScreen = screenWidth <= 450;\r\n    const rotationAngle = isVerySmallScreen ? 60 : 45;\r\n\r\n    return (\r\n      <g transform={`translate(${x},${y})`}>\r\n        <text\r\n          x={0}\r\n          y={0}\r\n          dy={16}\r\n          textAnchor=\"start\"\r\n          stroke=\"white\"\r\n          transform={`rotate(${rotationAngle})`}\r\n          data-testid={`XAxislabel-${payload.value}`}\r\n          className=\"recharts-text recharts-cartesian-axis-tick-value x-axis-label\"\r\n          style={{ fontSize: isVerySmallScreen ? \"10px\" : \"12px\" }}\r\n        >\r\n          {payload.value}\r\n        </text>\r\n      </g>\r\n    );\r\n  };\r\n\r\n  if (data.length === 0) {\r\n    return <div>No data available for chart</div>;\r\n  }\r\n\r\n  const chartMargin =\r\n    screenWidth <= 450\r\n      ? { top: 10, right: 10, bottom: 40, left: -15 }\r\n      : { top: 20, right: 20, bottom: 50, left: -15 };\r\n  return (\r\n    <div data-testid=\"scatterChart\">\r\n      <div className=\"chartGroup\"># of Events Per Location</div>\r\n      <ResponsiveContainer\r\n        width=\"99%\"\r\n        height={400}\r\n        style={{\r\n          backgroundColor: \"#143B5F\",\r\n        }}\r\n        role=\"chart\"\r\n        aria-label=\"scatterChart\"\r\n        className=\"scatterChart\"\r\n        data-testid=\"scatterChartSVG\"\r\n      >\r\n        <ScatterChart\r\n          role=\"graphics-document\"\r\n          data-testid=\"scatterChartSVG\"\r\n          className=\"scatterChart\"\r\n          aria-label=\"scatterChart\"\r\n          style={{\r\n            backgroundColor: \"#143B5F\",\r\n          }}\r\n          margin={chartMargin}\r\n        >\r\n          <CartesianGrid stroke={\"#495670\"} />\r\n          <XAxis\r\n            type=\"category\"\r\n            dataKey=\"city\"\r\n            name=\"City\"\r\n            tick={<CustomXAxisTick />}\r\n            interval={0}\r\n            stroke=\"white\"\r\n          />\r\n          <YAxis\r\n            type=\"number\"\r\n            dataKey=\"count\"\r\n            name=\"Number of Events\"\r\n            allowDecimals={false}\r\n            stroke=\"white\"\r\n            label={{\r\n              value: \"Number of Events\",\r\n              angle: -90,\r\n              position: \"center\",\r\n              fill: \"white\",\r\n              style: { fontSize: screenWidth <= 320 ? \"12px\" : \"14px\" },\r\n            }}\r\n          />\r\n          <Tooltip\r\n            cursor={{ strokeDasharray: \"3 3\" }}\r\n            contentStyle={{\r\n              backgroundColor: \"#FFEEE6\",\r\n              color: \"#ECF0F1\",\r\n              border: `1px solid ${\"#ECF0F1\"}`,\r\n            }}\r\n          />\r\n          <Scatter name=\"Events by City\" data={data} fill=\"white\" />\r\n        </ScatterChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CityEventsChart;\r\n"],"names":["_ref","events","allLocations","data","setData","useState","screenWidth","setScreenWidth","window","innerWidth","useEffect","handleResize","addEventListener","removeEventListener","getData","useMemo","Array","isArray","length","map","location","count","filter","event","city","split","CustomXAxisTick","_ref2","x","y","payload","isVerySmallScreen","rotationAngle","_jsx","transform","children","dy","textAnchor","stroke","value","className","style","fontSize","chartMargin","top","right","bottom","left","_jsxs","ResponsiveContainer","width","height","backgroundColor","role","ScatterChart","margin","CartesianGrid","XAxis","type","dataKey","name","tick","interval","YAxis","allowDecimals","label","angle","position","fill","Tooltip","cursor","strokeDasharray","contentStyle","color","border","Scatter"],"sourceRoot":""}